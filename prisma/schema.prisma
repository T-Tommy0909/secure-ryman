// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider         = "npx zod-prisma-types"
  createInputTypes = false
  output           = "../src/zod-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  MANAGER
  SECURYTY
  ORDINARY
}

enum TargetType {
  ALL
  MANAGER
  ORDINARY
}

enum AnswerChoiceType {
  RADIO
  CHECKBOX
}

model User {
  id      String   @id
  email   String   @unique
  role    UserType
  answers Answer[]
}

model Part {
  id        BigInt     @id @default(autoincrement())
  name      String     @unique
  questions Question[]
  categorys Category[]
}

model Category {
  id        BigInt     @id @default(autoincrement())
  partId    BigInt
  name      String     @unique
  part      Part       @relation(fields: [partId], references: [id])
  questions Question[]
  answers   Answer[]
}

model Question {
  id                  BigInt         @id @default(autoincrement())
  partId              BigInt
  categoryId          BigInt
  text                String
  dependentQuestionId BigInt?
  target              TargetType     @default(ALL)
  part                Part           @relation(fields: [partId], references: [id])
  category            Category       @relation(fields: [categoryId], references: [id])
  answerChoices       AnswerChoice[]
}

model AnswerChoice {
  id         BigInt           @id @default(autoincrement())
  questionId BigInt
  text       String
  points     Int              @default(0)
  type       AnswerChoiceType @default(RADIO)
  question   Question         @relation(fields: [questionId], references: [id])
  answers    Answer[]
}

model Answer {
  id             BigInt       @id @default(autoincrement())
  userId         String
  categoryId     BigInt
  answerChoiceId BigInt
  user           User         @relation(fields: [userId], references: [id])
  category       Category     @relation(fields: [categoryId], references: [id])
  answerChoice   AnswerChoice @relation(fields: [answerChoiceId], references: [id])
}
